###############################################################################
# Sample configuration for Entity Texture Feature's Random Entities feature.
# This is mostly identical to the configuration for OptiFine's Random Entities, but with additional features.
# Which is itself based on the configuration for MCPatcher's Random Mobs mod.
###############################################################################
# This file is offered without any copyright restrictions.
# Please copy and modify it to suit your needs.
#
# Entity Texture Features is backwards compatible with Optifine & Random Mobs. The textures and
# You can place this file in the following folders of your resource pack (and they are prioritised in this order):
# 1. "assets/minecraft/etf/random/entity"
# 2. "assets/minecraft/optifine/random/entity" *RECOMMENDED*
# 3. "assets/minecraft/optifine/mob"
# 4. "assets/minecraft/textures/entity"
# parallel to the directories of vanilla texture in "textures":
#
# Primary (vanilla) texture:
#   assets/minecraft/textures/entity/creeper/creeper.png
# Alts:
#   assets/minecraft/optifine/random/entity/creeper/creeper2.png
#   assets/minecraft/optifine/random/entity/creeper/creeper3.png
#   assets/minecraft/optifine/random/entity/creeper/creeper4.png
#   etc.
# or "assets/minecraft/etf/random/entity/creeper/creeper2.png" etc.
# or "assets/minecraft/textures/entity/creeper/creeper2.png"  etc.
#
# Properties (optional):
#   assets/minecraft/optifine/random/entity/creeper/creeper.properties
#   or "assets/minecraft/etf/random/entity/creeper/creeper.properties"
#   or "assets/minecraft/textures/entity/creeper/creeper.properties"
#
#
# Primary (vanilla) texture:
#   assets/minecraft/textures/entity/chicken.png
# Alts:
#   assets/minecraft/optifine/random/entity/chicken2.png
#   assets/minecraft/optifine/random/entity/chicken3.png
#   assets/minecraft/optifine/random/entity/chicken4.png
#   etc.
# or "assets/minecraft/etf/random/entity/chicken2.png" etc.
# or "assets/minecraft/textures/entity/chicken2.png"  etc.
#
# Properties (optional):
#   assets/minecraft/optifine/random/entity/chicken.properties
#   or "assets/minecraft/etf/random/entity/chicken.properties"
#   or "assets/minecraft/textures/entity/chicken.properties"
#
# painting support is planned but not yet implemented
###############################################################################
# This file consists of a sequence of rules, numbered from 1.
#
# Each rule specifies a range of entity textures to use and one or more conditions
# under which to use them.
#
# The entity coordinates when it spawns (single player) or when it is first
# seen by the client (multiplayer) are checked against each rule in sequence.
# The first rule that matches wins. If no rule matches, the default texture
# (e.g. creeper.png) is used.
#
# If no ".properties" file is present for an entity, then all available textures are
# used for that type of entity.
#
# Entities with multiple textures will need a ".properties" file for all texture variations if they are to be matched correctly e.g.
# ~ this currently differs from optifine and may yet be updated to match
#   wolf.properties
#   wolf_tame.properties
#   wolf_angry.properties
#
# Alternatively for "_eyes" and "_overlay" textures they will try to use the rules of the "base" texture.
#
# All property names are case-sensitive.
# All paths are relative to assets/minecraft unless otherwise stated.
###############################################################################
###############################################################################
# Rule format.
# <n> starts at 1.
###############################################################################
# (Required) Range of entity textures to use.
# The texture index "1" is the default texture from "assets/minecraft/texture".
textures.<n>=<list of texture indices>
# Alternatively the Random Mobs property "skins.<n>" can be used.
# skins.<n>=<list of skins>
#
# (Optional) List of weights to apply to the random choice
# Weights do not have to total 100 or any other particular value.
# The number of weights should match the number of textures
weights.<n>=<same-size list of weights>
#
# (Optional) List of biomes
# The vanilla biome names are listed here: https://minecraft.gamepedia.com/Biome#Biome_IDs
# Biomes added by mods can also be used but require "modID:biomeName", whereas vanilla biomes can be either "minecraft:plains" or just "plains".
biomes.<n>=<biome list>
#
# (Optional) List of blocks
# ETF only!
# sets the texture for the entity based on the block it spawned on or first appeared on
# this also checks the block it spawned inside allowing things like water, cave_air, flowers, etc. to be used
# Blocks added by mods can also be used but require "modID:blockName", whereas vanilla blocks can be either "minecraft:stone" or just "stone".
blocks.<n>=<block list>
#
# (Optional) Height ranges
# Replaces legacy minHeight and maxHeight properties.
# Since 1.18 negative values may be specified for height. When used in a range they can be put in brackets for Optifine but will function as written for ETF.
# ETF supports:             1 2-4   -65-2  -65--2   1-4   (-65)-2  (-65)-(-2)
# Optifine supports only:   1 2-4                   1-4   (-65)-2  (-65)-(-2)
heights.<n>=<height ranges>
#
# (Optional) Height legacy
# ETF also supports the legacy minHeight and maxHeight properties.
# they can be a single number from -64 to 319
minHeight.<n>=<height>
maxHeight.<n>=<height>
#
# (Optional) Entity name (singular)
# Uses syntax similar to the Custom Item Textures NBT tags.
# A value starting with "!" performs a negative match (not).
# Examples:
#  - Match string: "name=Pinky"
#  - Match special formatting: "name=\u00a74\u00a7oPinky"
#    (for best compatibility, use the escape sequence '\u00a7' instead of "§")
#  - Wildcards using "?" and "*": "name=pattern:Pinky*"
#  - Wildcards, case insensitive: "name=ipattern:Pinky*"
#  - Java regular expressions: "name=regex:Pin(k)+y"
#    (see http://docs.oracle.com/javase/6/docs/api/java/util/regex/Pattern.html)
#  - Java regular expressions, case insensitive: "name=iregex:Pin(k)+y"
# Any backslashes in the match string must be doubled.
# Literal backslashes within a regular expression or wildcard must be quadrupled.
# Correct:
#   name=regex:\\d+
#   name=regex:\\\\
#   name=/\\/\\
# Wrong:
#   name=regex:\d+
#   name=regex:\\
#   name=/\/\
name.<n>=<name>
#
# (Optional) Entity names (plural)
# ETF also allows a much simpler method of matching names
# This is identical to the Name property however allows easier definition of multiple names
# supports grouping names between "" quotations.
# works alongside the name (singular) property
# Examples:
#  - Match string: names.1=Pinky pinky bobby brendan "john smith"
#  - Match special formatting: names.1=\u00a74\u00a7oPinky \u00a7opinky bobby \u00a7obrendan "john \u00a7osmith"
names.<n>=<names>
#
# (Optional) Entity teams
# ETF only!
# This is identical to the Names property behaviour however allows definition by way of scoreboard teams
# supports grouping names between "" quotations.
# Example:
#  - teams.1=Red red red_team "red team"
teams.<n>=<teams>
#
# Professions (optional)
# List of villager professions with optional levels
# Entry format
#   <profession>[:level1,level2,...]
# Professions: none, armorer, butcher, cartographer, cleric, farmer, fisherman, fletcher,
#              leatherworker, librarian, mason, nitwit, shepherd, toolsmith, weaponsmith
# Example:
#   # Professions farmer (all levels) or librarian (levels 1,3,4)
#   professions=farmer librarian:1,3-4
#   professions=minecraft:farmer minecraft:librarian:1,3-4
#   # Professions full
#   professions=fisherman shepherd minecraft:nitwit villager_mod:town_mayor
#   professions=minecraft:fisherman minecraft:shepherd minecraft:nitwit
professions.<n>=<professions>
#
# Colors (optional)
# List of wolf/cat collar colors or sheep/llama colors
# ETF also supports shulker colors & tropical fish colours (but only for the base fish texture)
# Colors: white orange magenta light_blue yellow lime pink gray light_gray cyan purple blue brown green red black
# Example:
#   colors.2=pink magenta purple
# The legacy property "collarColors" is also recognized
colors.<n>=<colors>
#
# Baby (optional)
# Only valid for mobs
baby.<n>=<true/false>
#
# Health (optional)
# Range of health values, can also be given in percent.
# Only valid for mobs.
# Example:
#   health.1=10
#   health.2=5-8 10-12
#   health.3=0-50%
health.<n>=<list>
#
# Moon phase (Optional)
# List of moon phases (0-7)
# Example
#   moonPhase.1=3
#   moonPhase.2=0 1 2
#   moonPhase.1=0-2 4-7
moonPhase.<n>=<list>
#
# Day time (Optional)
# List of day times in ticks (0-24000)
# Example
#   dayTime.1=2000-10000
#   dayTime.2=0-1000 18000-24000
dayTime.<n>=<list>
#
# Weather (Optional)
# Several values can be specified, separated by space
# for example "weather=clear rain thunder"
weather.<n>=<clear|rain|thunder>
#
# Sizes (optional)
# Only valid for mobs with multiple sizes (0-255 for slimes and magma cubes and 0-64 for phantoms)
# Slimes and magma cubes naturally spawn in three sizes: 0=small, 1=medium, 3=big.
# Naturally spawning phantoms only spawn in one size: 0.
# Example
#   sizes.1=3
#   sizes.2=0 1 3
#   sizes.3=0-2 4-7
sizes.<n>=<list>
###############################################################################
# Examples:
# creeper/creeper.properties:
###############################################################################
# Use creeper10.png through creeper14.png for all underground creepers.
# creeper13.png will be used 7.3% (3/(10+10+10+3+10)) of the time.
skins.1=10-14
weights.1=10 10 10 3 10
heights.1=0-55
#
# Use 5, 7, 9 in plains, deserts, and a modded biome from an "aether" mod called "cloud_lands"
skins.2=5 7 9
biomes.2=plains minecraft:desert aether:cloud_lands
heights.2=80-255
#
# Fallback rule if nothing else matches.  Remember, if no rule matches, only
# the base creeper/creeper.png will be used.
skins.3=1-4 6 8 15-20